name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Install Dependencies Linux
        if: runner.os == 'Linux'
        run: sudo apt-get -yq update && sudo apt-get -yq install cmake libsdl2-dev libavcodec-dev libavfilter-dev libpostproc-dev libavformat-dev libavutil-dev  libswresample-dev libswscale-dev libavdevice-dev

      - name: Install Dependencies macOS
        if: runner.os == 'macOS'
        run: brew install cmake ffmpeg

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Package
        if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
        run: |
          cd build
          cpack
      - name: Publish
        if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1.8.10
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          prerelease: true
          removeArtifacts: true
          tag: latest
          commit: main
          name: "Development Build"
          artifacts: "${{github.workspace}}/build/dist/*.*"
      
      - name: Upload Artifacts
        if: runner.os == 'Linux' || runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: "screen-recorder-${{runner.os}}"
          path: bin
